{"version":3,"sources":["Context/context.js","components/SearchBox.js","components/TodoForm.js","components/SingleTodo.js","components/TodoList.js","components/Todo.js","App.js","index.js"],"names":["AppContext","React","createContext","storageKey","AppProvider","children","useState","clients","setClients","isEdit","setIsEdit","editableItem","setEditableItem","searchText","setSearchText","useEffect","JSON","parse","localStorage","getItem","retrieveData","Provider","value","addNewClient","newClient","name","email","updatedClients","map","item","id","setItem","stringify","newitem","Date","now","alert","removeClient","remainClients","filter","editClient","find","handleSearchTextChange","text","useGlobalContext","useContext","SearchBox","className","onChange","e","target","type","placeholder","initialState","TodoForm","client","setClient","handleClientData","onSubmit","preventDefault","SingleTodo","onClick","TodoList","list","forEach","Object","values","join","toLowerCase","indexOf","push","Todo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c308ec9.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst storageKey = 'clients';\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [clients, setClients] = useState([]);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [editableItem, setEditableItem] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    // add new item \r\n    const addNewClient = (newClient) => {\r\n        const { name, email } = newClient;\r\n        if (name && email) {\r\n            if (isEdit) {\r\n                const updatedClients = clients.map((item) => {\r\n                    if (item.id === editableItem.id) {\r\n                        return {\r\n                            ...item,\r\n                            name: newClient.name,\r\n                            email: newClient.email\r\n                        }\r\n                    }\r\n                    return item;\r\n                });\r\n                setClients(updatedClients);\r\n                localStorage.setItem(storageKey, JSON.stringify(updatedClients));\r\n                setIsEdit(false);\r\n            } else {\r\n                const newitem = [\r\n                    {\r\n                        id: Date.now(),\r\n                        ...newClient\r\n                    },\r\n                    ...clients\r\n                ];\r\n                setClients(newitem);\r\n                localStorage.setItem(storageKey, JSON.stringify(newitem));\r\n                // setIsEdit(false);\r\n            }\r\n        } else {\r\n            alert('Please Enter Value');\r\n        }\r\n    }\r\n\r\n    // Search \r\n    const handleSearchTextChange = (text) => {\r\n        setSearchText(text);\r\n    }\r\n\r\n    // delete item\r\n    const removeClient = (id) => {\r\n        const remainClients = clients.filter((item) => item.id !== id);\r\n        setClients(remainClients);\r\n        localStorage.setItem(storageKey, JSON.stringify(remainClients));\r\n    }\r\n\r\n    // edit client  \r\n    const editClient = (id) => {\r\n        setEditableItem(clients.find(item => item.id === id));\r\n        setIsEdit(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // retrieve Data from localStorage and set in the 'clients' state\r\n        const retrieveData = () => {\r\n            const clients = JSON.parse(localStorage.getItem(storageKey));\r\n            if (clients) setClients(clients);\r\n        }\r\n        retrieveData();\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                clients,\r\n                addNewClient,\r\n                removeClient,\r\n                isEdit,\r\n                editClient,\r\n                editableItem,\r\n                handleSearchTextChange,\r\n                searchText,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\n// custom hook \r\nexport const useGlobalContext = () => {\r\n    return (\r\n        useContext(AppContext)\r\n    )\r\n}\r\n\r\nexport { AppContext, AppProvider };\r\n","import { FaSearch } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"../Context/context\";\r\n\r\nfunction SearchBox() {\r\n    const { handleSearchTextChange, searchText } = useGlobalContext();\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center todo-search\">\r\n            <span><FaSearch /> </span>\r\n            <input\r\n                onChange={(e) => handleSearchTextChange(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={searchText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useGlobalContext } from '../Context/context';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n};\r\n\r\nexport default function TodoForm() {\r\n    const [client, setClient] = useState(initialState);\r\n    const { addNewClient,editableItem, isEdit } = useGlobalContext();\r\n\r\n    const handleClientData = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setClient({ ...client, [name]: value });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addNewClient(client);\r\n        setClient(initialState);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (isEdit) {\r\n            setClient({ name: editableItem.name, email: editableItem.email })\r\n        };\r\n    },[isEdit,editableItem]);\r\n\r\n\r\n    const { name, email } = client;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todo-form shadow\">\r\n            <input\r\n                onChange={handleClientData}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                className=\"todo-input\"\r\n                placeholder=\"Name\"\r\n            />\r\n            <input\r\n                onChange={handleClientData}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                className=\"todo-input\"\r\n                placeholder=\"Email\"\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value={`${!isEdit ? 'Add' : 'Update'}`}\r\n                className=\"todo-submit-btn\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\nimport { useGlobalContext } from '../Context/context';\r\n\r\nexport default function SingleTodo({ client }) {\r\n    const { id, name, email } = client;\r\n    const { removeClient, editClient } = useGlobalContext();\r\n    return (\r\n        <>\r\n            <div className=\"todo-item\">\r\n                <div className=\"todo-item-inner\">\r\n                    <div className=\"left\">\r\n                        <p className=\"name\">{name}</p>\r\n                        <p className=\"email\">{email}</p>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <button onClick={() => editClient(id)} className=\"edit\"><FaEdit /></button>\r\n                        <button onClick={() => removeClient(id)} className=\"remove\"><FaTrash /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import SingleTodo from './SingleTodo';\r\nimport { useGlobalContext } from '../Context/context'\r\n\r\nfunction TodoList() {\r\n    const { clients, searchText } = useGlobalContext();\r\n\r\n    let list = [];\r\n\r\n    clients.forEach((client) => {\r\n        const clientString = Object.values(client).join('').toLowerCase();\r\n        if (clientString.indexOf(searchText) === -1) {\r\n            return;\r\n        }\r\n        list.push(\r\n            <SingleTodo key={client.id} client={client} />\r\n        )\r\n    });\r\n\r\n    // clients.map((client) => {\r\n    //     const clientString = Object.values(client).join('').toLowerCase();\r\n    //     if (clientString.indexOf(searchText) === -1) {\r\n    //         return;\r\n    //     }\r\n    //     list.push(\r\n    //         <SingleTodo key={client.id} client={client} />\r\n    //     )\r\n    // })\r\n\r\n    // clients.filter(client => {\r\n    //     const clientString = Object.values(client).join('').toLowerCase();\r\n    //     if (clientString.indexOf(searchText) === -1) {\r\n    //         return;\r\n    //     }\r\n    //     list.push(\r\n    //         <SingleTodo key={client.id} client={client} />\r\n    //     );\r\n    // });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"todo-items\">\r\n            {list}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport SearchBox from './SearchBox';\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList';\r\n\r\n\r\nexport default function Todo() {\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <SearchBox/>\r\n                <TodoForm />\r\n                <TodoList />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/style.css';\r\nimport Todo from './components/Todo';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n    <Todo/>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppProvider } from './Context/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}